{"ast":null,"code":"import axios from \"axios\";\nimport storage from \"./Storage\";\nvar apiURL = 'http://localhost:8080';\nvar api = axios.create({\n  baseURL: apiURL\n});\nvar value = \"jeff\";\nvar jsonValue = JSON.stringify(value);\nstorage.save({\n  key: 'jefflogin',\n  value: value,\n  data: value\n});\napi.interceptors.request.use(function (req) {\n  var token = null;\n  storage.load({\n    key: \"jefflogin\"\n  }).then(function (data) {\n    token = data;\n  });\n\n  if (token != null) {\n    token = req.headers.authorization;\n  }\n\n  return req;\n});\nexport default api;","map":{"version":3,"sources":["C:/Users/Umar/Documents/FLUTTER/jeffv2/Api.js"],"names":["axios","storage","apiURL","api","create","baseURL","value","jsonValue","JSON","stringify","save","key","data","interceptors","request","use","req","token","load","then","headers","authorization"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP;AAEA,IAAMC,MAAM,GAAG,uBAAf;AAEA,IAAMC,GAAG,GAAGH,KAAK,CAACI,MAAN,CAAa;AACrBC,EAAAA,OAAO,EAAEH;AADY,CAAb,CAAZ;AAIA,IAAMI,KAAK,GAAC,MAAZ;AAEA,IAAMC,SAAS,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAlB;AAEIL,OAAO,CAACS,IAAR,CAAa;AAETC,EAAAA,GAAG,EAAE,WAFI;AAEQL,EAAAA,KAAK,EAACA,KAFd;AAGTM,EAAAA,IAAI,EAACN;AAHI,CAAb;AAQIH,GAAG,CAACU,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA6B,UAAAC,GAAG,EAAI;AAChC,MAAIC,KAAK,GAAG,IAAZ;AACAhB,EAAAA,OAAO,CAACiB,IAAR,CAAa;AAACP,IAAAA,GAAG,EAAC;AAAL,GAAb,EAAgCQ,IAAhC,CAAqC,UAACP,IAAD,EAAQ;AACzCK,IAAAA,KAAK,GAAGL,IAAR;AACH,GAFD;;AAOJ,MAAIK,KAAK,IAAI,IAAb,EAAmB;AAwBfA,IAAAA,KAAK,GAAGD,GAAG,CAACI,OAAJ,CAAYC,aAApB;AACH;;AACL,SAAOL,GAAP;AACH,CApCO;AAsCR,eAAeb,GAAf","sourcesContent":["import axios from \"axios\";\nimport storage from './Storage'\n\nconst apiURL = 'http://localhost:8080'\n\nconst api = axios.create({\n    baseURL: apiURL\n})\n\nconst value=\"jeff\";\n//request interceptor to add the auth token header to requests\nconst jsonValue = JSON.stringify(value)\n\n    storage.save({\n\n        key: 'jefflogin',value:value,\n        data:value\n    \n    })\n\n    \n        api.interceptors.request.use(req => {\n            let token = null;\n            storage.load({key:\"jefflogin\"}).then((data)=>{\n                token = data;\n            })\n        \n        \n       \n    \n        if (token != null) {\n\n            // // if this token is 5 mins old, then refresh it\n            // // if the refresh attempt fails, the user will be redirected to the login page\n            // // var tokenAge = Math.abs(new Date().getTime() - localStorage.getItem(\"accessTokenBirth\"));\n            // if (tokenAge > 300000) { // 5 mins\n    \n            //     // prevents refreshing token whilst refresh token is in progress\n            //     // localStorage.setItem(\"accessTokenBirth\", new Date().getTime())\n    \n            //     axios.get(apiURL + \"/user/refresh\", {\n            //         headers: {\n            //             // \"Authorization\": localStorage.getItem(\"accessToken\")\n            //         }\n            //     }).then((response) => {\n            //         // localStorage.setItem(\"accessToken\", response.data);\n            //     }).catch((error) => {\n            //         // the user was probably inactive for too long, so the token could not be refreshed\n            //         // localStorage.clear();\n            //         window.location = \"/login\";\n            //     })\n            // }\n    \n            \n            token = req.headers.authorization  ;\n        }\n    return req;\n});\n\nexport default api;"]},"metadata":{},"sourceType":"module"}