{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Umar\\\\Documents\\\\FLUTTER\\\\jeffv2\\\\screens\\\\LoginScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport api from \"../Api\";\nimport storage from \"../Storage\";\n\nvar Login = function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      email: '',\n      password: ''\n    };\n    _this.setPassword = _this.setPassword.bind(_assertThisInitialized(_this));\n    _this.setEmail = _this.setEmail.bind(_assertThisInitialized(_this));\n    _this.login = _this.login.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"setPassword\",\n    value: function setPassword(password) {\n      this.setState({\n        'password': password\n      });\n    }\n  }, {\n    key: \"setEmail\",\n    value: function setEmail(email) {\n      this.setState({\n        'email': email\n      });\n    }\n  }, {\n    key: \"login\",\n    value: function login() {\n      var user = {\n        \"email\": \"instructor@test.com\",\n        \"password\": \"Test12345!\"\n      };\n      api.post('/user/login', user).then(function (res) {\n        var response = res;\n        storage.save({\n          key: 'accessToken',\n          data: res.data\n        });\n      }).catch(function (err) {\n        var error = err;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, React.createElement(StatusBar, {\n        style: \"auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.inputView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: styles.TextInput,\n        placeholder: \"Email.\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: this.setEmail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.inputView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: styles.TextInput,\n        placeholder: \"Password.\",\n        placeholderTextColor: \"#003f5c\",\n        secureTextEntry: true,\n        onChangeText: this.setPassword,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      })), React.createElement(Button, {\n        onPress: this.login,\n        title: \"Login\",\n        color: \"#841584\",\n        accessibilityLabel: \"Learn more about this purple button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputView: {\n    backgroundColor: \"#FFC0CB\",\n    borderRadius: 30,\n    width: \"100%\",\n    height: 45,\n    marginBottom: 20,\n    alignItems: \"center\"\n  },\n  TextInput: {\n    height: 50,\n    flex: 1,\n    padding: 10,\n    marginLeft: 20\n  },\n  forgot_button: {\n    height: 30,\n    marginBottom: 30\n  },\n  loginBtn: {\n    width: \"100%\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    backgroundColor: \"#FF1493\"\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["C:/Users/Umar/Documents/FLUTTER/jeffv2/screens/LoginScreen.js"],"names":["React","Component","api","storage","Login","props","state","email","password","setPassword","bind","setEmail","login","setState","user","post","then","res","response","save","key","data","catch","err","error","styles","container","inputView","TextInput","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","borderRadius","width","height","marginBottom","padding","marginLeft","forgot_button","loginBtn","marginTop","LoginScreen"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    StyleSheet,\n    Text,\n    View,\n    Image,\n    TextInput,\n    Button,\n    TouchableOpacity,\n} from \"react-native\";\n//import { StatusBar } from \"expo-status-bar\";\nimport api from '../Api';\nimport storage from '../Storage';\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: ''\n        }\n        this.setPassword = this.setPassword.bind(this)\n        this.setEmail = this.setEmail.bind(this)\n        this.login = this.login.bind(this)\n    }\n\n    setPassword(password) {\n        this.setState({ 'password': password });\n    }\n\n    setEmail(email) {\n        this.setState({ 'email': email });\n    }\n\n    login() {\n\n        var user = { \"email\":\"instructor@test.com\",\n        \"password\":\"Test12345!\"};\n\n        api.post('/user/login', user).then((res) => {\n            var response = res;\n                storage.save(\n                    {\n                        key:'accessToken',\n                        data: res.data\n                    }\n                );\n        }).catch((err) => {\n            var error = err;\n        })\n    }\n\n    render() {\n        return (\n            <View style={styles.container}>\n                <StatusBar style=\"auto\" />\n                <View style={styles.inputView}>\n                    <TextInput\n                        style={styles.TextInput}\n                        placeholder=\"Email.\"\n                        placeholderTextColor=\"#003f5c\"\n                        onChangeText={this.setEmail}\n                    />\n                </View>\n\n                <View style={styles.inputView}>\n                    <TextInput\n                        style={styles.TextInput}\n                        placeholder=\"Password.\"\n                        placeholderTextColor=\"#003f5c\"\n                        secureTextEntry={true}\n                        onChangeText={this.setPassword}\n                    />\n                </View>\n\n\n\n                <Button\n                    onPress={this.login}\n                    title=\"Login\"\n                    color=\"#841584\"\n                    accessibilityLabel=\"Learn more about this purple button\"\n                />\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: \"#fff\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n\n    inputView: {\n        backgroundColor: \"#FFC0CB\",\n        borderRadius: 30,\n        width: \"100%\",\n        height: 45,\n        marginBottom: 20,\n\n        alignItems: \"center\",\n    },\n\n    TextInput: {\n        height: 50,\n        flex: 1,\n        padding: 10,\n        marginLeft: 20,\n    },\n\n    forgot_button: {\n        height: 30,\n        marginBottom: 30,\n    },\n\n    loginBtn: {\n        width: \"100%\",\n        borderRadius: 25,\n        height: 50,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginTop: 40,\n        backgroundColor: \"#FF1493\",\n    },\n});\nexport default LoginScreen;"]},"metadata":{},"sourceType":"module"}