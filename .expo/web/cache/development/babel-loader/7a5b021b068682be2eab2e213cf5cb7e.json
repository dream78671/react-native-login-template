{"ast":null,"code":"import axios from \"axios\";\nimport storage from \"./Storage\";\nvar apiURL = 'http://localhost:8080';\nvar api = axios.create({\n  baseURL: apiURL\n});\napi.interceptors.request.use(function (req) {\n  var token = null;\n  storage.load({\n    key: \"accessToken\"\n  }).then(function (data) {\n    token = data;\n  });\n\n  if (token != null) {\n    req.headers.authorization = token;\n  }\n\n  return req;\n});\nexport default api;","map":{"version":3,"sources":["C:/Users/Umar/Documents/FLUTTER/jeffv2/Api.js"],"names":["axios","storage","apiURL","api","create","baseURL","interceptors","request","use","req","token","load","key","then","data","headers","authorization"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP;AAEA,IAAMC,MAAM,GAAG,uBAAf;AAEA,IAAMC,GAAG,GAAGH,KAAK,CAACI,MAAN,CAAa;AACrBC,EAAAA,OAAO,EAAEH;AADY,CAAb,CAAZ;AAMAC,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA6B,UAAAC,GAAG,EAAI;AAChC,MAAIC,KAAK,GAAG,IAAZ;AACAT,EAAAA,OAAO,CAACU,IAAR,CAAa;AAACC,IAAAA,GAAG,EAAC;AAAL,GAAb,EAAkCC,IAAlC,CAAuC,UAACC,IAAD,EAAQ;AAC3CJ,IAAAA,KAAK,GAAGI,IAAR;AACH,GAFD;;AAIA,MAAIJ,KAAK,IAAI,IAAb,EAAmB;AAuBfD,IAAAA,GAAG,CAACM,OAAJ,CAAYC,aAAZ,GAA4BN,KAA5B;AACH;;AAED,SAAOD,GAAP;AACH,CAjCD;AAmCA,eAAeN,GAAf","sourcesContent":["import axios from \"axios\";\nimport storage from './Storage'\n\nconst apiURL = 'http://localhost:8080'\n\nconst api = axios.create({\n    baseURL: apiURL\n})\n\n\n//request interceptor to add the auth token header to requests\napi.interceptors.request.use(req => {\n    let token = null;\n    storage.load({key:\"accessToken\"}).then((data)=>{\n        token = data;\n    })\n    // refresh token every 10 mins using current token\n    if (token != null) {\n\n        // // if this token is 5 mins old, then refresh it\n        // // if the refresh attempt fails, the user will be redirected to the login page\n        // // var tokenAge = Math.abs(new Date().getTime() - localStorage.getItem(\"accessTokenBirth\"));\n        // if (tokenAge > 300000) { // 5 mins\n\n        //     // prevents refreshing token whilst refresh token is in progress\n        //     // localStorage.setItem(\"accessTokenBirth\", new Date().getTime())\n\n        //     axios.get(apiURL + \"/user/refresh\", {\n        //         headers: {\n        //             // \"Authorization\": localStorage.getItem(\"accessToken\")\n        //         }\n        //     }).then((response) => {\n        //         // localStorage.setItem(\"accessToken\", response.data);\n        //     }).catch((error) => {\n        //         // the user was probably inactive for too long, so the token could not be refreshed\n        //         // localStorage.clear();\n        //         window.location = \"/login\";\n        //     })\n        // }\n\n        req.headers.authorization = token;\n    }\n\n    return req;\n});\n\nexport default api;"]},"metadata":{},"sourceType":"module"}